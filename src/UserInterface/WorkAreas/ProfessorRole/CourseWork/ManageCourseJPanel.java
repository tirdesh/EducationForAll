/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UserInterface.WorkAreas.ProfessorRole.CourseWork;

import ui.*;
import Business.Business;
import Business.CourseWork.*;
import Business.Profiles.*;
import UserInterface.WorkAreas.ProfessorRole.ProfessorWorkAreaJPanel;
import java.time.DayOfWeek;
import java.time.LocalDate;
import java.time.LocalTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import javax.swing.DefaultListModel;
import javax.swing.JList;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.ListModel;


/**
 *
 * @author tirdesh
 */
public class ManageCourseJPanel extends javax.swing.JPanel {
    Business business;
    JPanel CardSequencePanel;
    ProfessorProfile professor;


    /**
     * Creates new form AddCourseJPanel
     */
    public ManageCourseJPanel(Business bz, ProfessorProfile p, JPanel jp) {
        this.business = bz;
        CardSequencePanel = jp;
        professor = p;
        initComponents();
        modifyComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        lblLastName = new javax.swing.JLabel();
        txtFirstName = new javax.swing.JTextField();
        lblFirstName = new javax.swing.JLabel();
        lblEmail = new javax.swing.JLabel();
        txtEmail = new javax.swing.JTextField();
        lblRole = new javax.swing.JLabel();
        jRadioButtonStudent = new javax.swing.JRadioButton();
        jRadioButtonProfessor = new javax.swing.JRadioButton();
        btnUpdateCourse = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        lblLastName1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();
        jComboBoxPreRequisites = new javax.swing.JComboBox<>();
        jRadioButtonProfessor1 = new javax.swing.JRadioButton();
        lblRole1 = new javax.swing.JLabel();
        jRadioButtonStudent1 = new javax.swing.JRadioButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        btnBack = new javax.swing.JButton();
        btnLogOut = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jListProgrammingLanguages = new javax.swing.JList<>();
        jScrollPane3 = new javax.swing.JScrollPane();
        jListFrameworks = new javax.swing.JList<>();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jListTools = new javax.swing.JList<>();
        jLabel7 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jComboBoxSelectCourse = new javax.swing.JComboBox<>();
        jButtonEdit = new javax.swing.JButton();
        jButtonDelete = new javax.swing.JButton();
        jButtonCopy = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane6 = new javax.swing.JScrollPane();
        jListProgrammingLanguages1 = new javax.swing.JList<>();

        lblLastName.setText("Description:");

        txtFirstName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFirstNameActionPerformed(evt);
            }
        });

        lblFirstName.setText("Name:");

        txtEmail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEmailActionPerformed(evt);
            }
        });

        lblRole.setText("Teaching Type:");

        buttonGroup1.add(jRadioButtonStudent);
        jRadioButtonStudent.setText("Live");
        jRadioButtonStudent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonStudentActionPerformed(evt);
            }
        });

        buttonGroup1.add(jRadioButtonProfessor);
        jRadioButtonProfessor.setText("Recorded");

        btnUpdateCourse.setText("Update Course");
        btnUpdateCourse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateCourseActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Helvetica Neue", 1, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Manage Course");

        lblLastName1.setText("No. Of Hours:");

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jLabel2.setText("PreRequisites:");

        jComboBoxPreRequisites.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBoxPreRequisites.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxPreRequisitesActionPerformed(evt);
            }
        });

        buttonGroup2.add(jRadioButtonProfessor1);
        jRadioButtonProfessor1.setText("On Demand");
        jRadioButtonProfessor1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonProfessor1ActionPerformed(evt);
            }
        });

        lblRole1.setText("Offering Type:");

        buttonGroup2.add(jRadioButtonStudent1);
        jRadioButtonStudent1.setText("Academic Calendar");
        jRadioButtonStudent1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonStudent1ActionPerformed(evt);
            }
        });

        jLabel3.setText("jLabel3:");

        jLabel4.setText("jLabel4:");

        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        btnLogOut.setText("Log Out");
        btnLogOut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLogOutActionPerformed(evt);
            }
        });

        jLabel5.setText("Programming Langauages:");

        jListProgrammingLanguages.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane2.setViewportView(jListProgrammingLanguages);

        jListFrameworks.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane3.setViewportView(jListFrameworks);

        jLabel6.setText("Frameworks:");

        jListTools.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane4.setViewportView(jListTools);

        jLabel7.setText("Tools:");

        jLabel9.setText("Class Time:");

        jTextField3.setText("23:23");

        jLabel10.setText("Select Course:");

        jComboBoxSelectCourse.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBoxSelectCourse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxSelectCourseActionPerformed(evt);
            }
        });

        jButtonEdit.setText("Edit");
        jButtonEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEditActionPerformed(evt);
            }
        });

        jButtonDelete.setText("Delete");
        jButtonDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDeleteActionPerformed(evt);
            }
        });

        jButtonCopy.setText("Copy");
        jButtonCopy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCopyActionPerformed(evt);
            }
        });

        jLabel8.setText("Class Days:");

        DefaultListModel<String> listModelProgrammingLanguages1 = new DefaultListModel<>();
        jListProgrammingLanguages1.setModel(listModelProgrammingLanguages1);
        jScrollPane6.setViewportView(jListProgrammingLanguages1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(59, 59, 59)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnLogOut, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(149, 149, 149)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButtonEdit)
                                .addGap(18, 18, 18)
                                .addComponent(jButtonDelete)
                                .addGap(18, 18, 18)
                                .addComponent(jButtonCopy))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel10)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(jComboBoxSelectCourse, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(318, 318, 318)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(lblRole1, javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(lblRole, javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.TRAILING))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(lblFirstName)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(15, 15, 15)
                                        .addComponent(lblLastName))
                                    .addComponent(lblLastName1, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING))))
                        .addGap(22, 22, 22)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jComboBoxPreRequisites, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jRadioButtonStudent1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jRadioButtonProfessor1))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jRadioButtonStudent)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jRadioButtonProfessor))
                            .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jTextField1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 163, Short.MAX_VALUE)
                                .addComponent(jTextField2, javax.swing.GroupLayout.Alignment.LEADING))
                            .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(73, 73, 73)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel7)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(73, 73, 73)))
                .addContainerGap(1823, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(198, 198, 198)
                        .addComponent(lblEmail))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(370, 370, 370)
                        .addComponent(btnUpdateCourse)))
                .addGap(0, 2100, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addComponent(lblEmail))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jComboBoxSelectCourse, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10))
                        .addGap(24, 24, 24)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButtonEdit)
                            .addComponent(jButtonDelete)
                            .addComponent(jButtonCopy)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnBack)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnLogOut)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblFirstName))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblLastName))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jComboBoxPreRequisites, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblLastName1)
                    .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblRole)
                        .addComponent(jRadioButtonStudent))
                    .addComponent(jRadioButtonProfessor))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jRadioButtonStudent1)
                            .addComponent(lblRole1))
                        .addComponent(jRadioButtonProfessor1)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9)
                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(9, 9, 9)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnUpdateCourse)
                .addGap(52, 52, 52))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txtFirstNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFirstNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFirstNameActionPerformed

    private void txtEmailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEmailActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtEmailActionPerformed

    private void jRadioButtonStudentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonStudentActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jRadioButtonStudentActionPerformed

    private void btnUpdateCourseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateCourseActionPerformed
        // TODO add your handling code here:
    // Get the values entered by the user
       jButtonEdit.setVisible(false);
       //System.out.println("Selected tools(update): " + jListTools.getSelectedValuesList());
       Course newCourse;
           

       String selectedCourseName = (String) jComboBoxSelectCourse.getSelectedItem();

        if (selectedCourseName != null && !"Select a Course".equals(selectedCourseName)) {
            String courseName = txtFirstName.getText();
            String description = jTextArea1.getText();
            int courseHours = Integer.parseInt(txtEmail.getText());
            String sessionType = "";
            if (jRadioButtonStudent.isSelected()) {
                sessionType = "Live";
            } else if (jRadioButtonProfessor.isSelected()) {
                sessionType = "Recorded";
            }
            //populateTechStack();
            if ("Copy Course".equals(btnUpdateCourse.getText())){
                newCourse = business.getCourseCatalog().newCourse(courseName, description, new ArrayList<>(), courseHours);
                professor.addCourseToProfile(newCourse);
                JOptionPane.showMessageDialog(this, "Course has been copied successfully!");
            }
            else{
                newCourse = professor.findCourse(courseName);
                newCourse.setCourseName(courseName);
                newCourse.setDescription(description);
                newCourse.setCourseHours(courseHours);
                JOptionPane.showMessageDialog(this, "Course has been updated successfully!");
            }


//        List<String> programmingLanguages = newCourse.getTechStack().getProgrammingLanguages();
//        List<String> frameworks = newCourse.getTechStack().getFrameworks();
//        List<String> tools = newCourse.getTechStack().getTools();
//        for (String language : programmingLanguages) {
//            jListProgrammingLanguages.setSelectedValue(language, true);
//        }
//        for (String language : frameworks) {
//            jListProgrammingLanguages.setSelectedValue(language, true);
//        }
//        for (String language : tools) {
//            jListProgrammingLanguages.setSelectedValue(language, true);
//        }
        // Set the session type for the course
        newCourse.setSessionType(sessionType);
        LocalTime classTime = LocalTime.parse(jTextField3.getText());
            // Fetch class days from jListProgrammingLanguages1
        List<String> selectedClassDays = jListProgrammingLanguages1.getSelectedValuesList();
        List<DayOfWeek> classDays = new ArrayList<>();

        // Convert the selected day strings to DayOfWeek enum values
        for (String selectedDay : selectedClassDays) {
            switch (selectedDay) {
                case "Monday" -> classDays.add(DayOfWeek.MONDAY);
                case "Tuesday" -> classDays.add(DayOfWeek.TUESDAY);
                case "Wednesday" -> classDays.add(DayOfWeek.WEDNESDAY);
                case "Thursday" -> classDays.add(DayOfWeek.THURSDAY);
                case "Friday" -> classDays.add(DayOfWeek.FRIDAY);
                case "Saturday" -> classDays.add(DayOfWeek.SATURDAY);
                case "Sunday" -> classDays.add(DayOfWeek.SUNDAY);
            }
        }

    
    // Check if it's an academic calendar-based course
    if (jRadioButtonStudent1.isSelected()) {
        String term = jTextField1.getText();
        int termYear = Integer.parseInt(jTextField2.getText());
        // Set course duration for academic calendar-based courses
        newCourse.setCourseDuration(term, termYear, business.getAcademicCalendar());
        newCourse.createLiveClassSchedule(term, termYear, business.getAcademicCalendar(), classTime, classDays);


    } else if (jRadioButtonProfessor1.isSelected()) {
        // Parse the start and end date for on-demand courses
        LocalDate startDate = LocalDate.parse(jTextField1.getText());
        LocalDate endDate = LocalDate.parse(jTextField2.getText());
        // Set course duration for on-demand courses
        newCourse.setCourseDuration(startDate, endDate);
        newCourse.createOnDemandClassSchedule(startDate, endDate, classTime, classDays);
    }
    
    System.out.print("hi");
    
    // Collect selected programming languages from the JList
    List<String> selectedLanguages = jListProgrammingLanguages.getSelectedValuesList();
    
    // Collect selected frameworks from the JList
    List<String> selectedFrameworks = jListFrameworks.getSelectedValuesList();
    
    // Collect selected tools from the JList
    List<String> selectedTools = jListTools.getSelectedValuesList();
    //System.out.print(selectedTools.get(0));
    //System.out.println("Selected tools(upd): " + jListTools.getSelectedValuesList());

    // Create a TechStack object and set the selected lists
    TechStack techStack = new TechStack(selectedLanguages, selectedFrameworks, selectedTools);
    
    // Set the TechStack for the course
    newCourse.setTechStack(techStack);
    
    try{
        Course prerequisites = (Course) jComboBoxPreRequisites.getSelectedItem();
        newCourse.getPrerequisites().add(prerequisites);
    }
    catch(ClassCastException ex){
        String prerequisites = "None";
    }
    
    
    // Notify the user that the course has been added
                setCoursePropertiesBasedOnSelection(professor.findCourse(selectedCourseName));
            setCourseFieldsEditable(false);
                btnUpdateCourse.setVisible(false);
                        populateCourseComboBox();

        }
    
    }//GEN-LAST:event_btnUpdateCourseActionPerformed
    
    private void jRadioButtonStudent1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonStudent1ActionPerformed
        // TODO add your handling code here:
            jLabel3.setText("Term:");
            jLabel4.setText("Year:");
            jLabel3.setVisible(true);
            jTextField1.setVisible(true);
            jLabel4.setVisible(true);
            jTextField2.setVisible(true);
            jTextField1.setText("Fall");
            jTextField2.setText("2023");
            
    }//GEN-LAST:event_jRadioButtonStudent1ActionPerformed

    private void jRadioButtonProfessor1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonProfessor1ActionPerformed
        // TODO add your handling code here:
            jLabel3.setText("Start Date:");
            jLabel4.setText("End Date:");
            jLabel3.setVisible(true);
            jTextField1.setVisible(true);
            jLabel4.setVisible(true);
            jTextField2.setVisible(true);
            jTextField1.setText("2023-12-31");
            jTextField2.setText("2024-03-31");
    }//GEN-LAST:event_jRadioButtonProfessor1ActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        ProfessorWorkAreaJPanel professorWorkAreaJPanel = new ProfessorWorkAreaJPanel(business, professor, CardSequencePanel);
        CardSequencePanel.removeAll();
        CardSequencePanel.add("professor", professorWorkAreaJPanel);
        ((java.awt.CardLayout) CardSequencePanel.getLayout()).next(CardSequencePanel);
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnLogOutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLogOutActionPerformed
        // TODO add your handling code here:
        LoginJPanel panel = new LoginJPanel(business, CardSequencePanel);
        CardSequencePanel.removeAll();
        CardSequencePanel.add("LoginJPanel", panel);
        ((java.awt.CardLayout) CardSequencePanel.getLayout()).next(CardSequencePanel);
    }//GEN-LAST:event_btnLogOutActionPerformed

    private void jComboBoxPreRequisitesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxPreRequisitesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBoxPreRequisitesActionPerformed

    private void jComboBoxSelectCourseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxSelectCourseActionPerformed
        // TODO add your handling code here:
        jButtonEdit.setVisible(true);
        jButtonCopy.setVisible(true);
        jButtonDelete.setVisible(true);

        String selectedCourseName = (String) jComboBoxSelectCourse.getSelectedItem();

        if (selectedCourseName != null && !"Select a Course".equals(selectedCourseName)) {
            // clearAllFields();
            setCourseFieldsVisibility(true);
            setCoursePropertiesBasedOnSelection(professor.findCourse(selectedCourseName));
            setCourseFieldsEditable(false);
            btnUpdateCourse.setVisible(false);
        }
        else{
            setCourseFieldsVisibility(false);
            jButtonDelete.setVisible(false);
            jButtonEdit.setVisible(false);
            jButtonCopy.setVisible(false);
        }
    }//GEN-LAST:event_jComboBoxSelectCourseActionPerformed

    private void jButtonEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEditActionPerformed
        // TODO add your handling code here:
        jButtonEdit.setVisible(false);
        jButtonCopy.setVisible(false);
        jButtonDelete.setVisible(false);
        
        setCourseFieldsEditable(true);
        populateTechStack();
        Course newCourse = professor.findCourse((String) jComboBoxSelectCourse.getSelectedItem());
        List<String> programmingLanguages = newCourse.getTechStack().getProgrammingLanguages();
        List<String> frameworks = newCourse.getTechStack().getFrameworks();
        List<String> tools = newCourse.getTechStack().getTools();
        List<DayOfWeek> daysOfWeek = newCourse.getSchedule().getDaysOfWeek(); // Adjust this to your Schedule class
        List<String> selectedDayStrings = new ArrayList<>();

        for (DayOfWeek day : daysOfWeek) {
            switch (day) {
                case MONDAY -> selectedDayStrings.add("Monday");
                case TUESDAY -> selectedDayStrings.add("Tuesday");
                case WEDNESDAY -> selectedDayStrings.add("Wednesday");
                case THURSDAY -> selectedDayStrings.add("Thursday");
                case FRIDAY -> selectedDayStrings.add("Friday");
                case SATURDAY -> selectedDayStrings.add("Saturday");
                case SUNDAY -> selectedDayStrings.add("Sunday");
            }
        }
        

        // Get the existing list models
        DefaultListModel<String> listModelLanguages = (DefaultListModel<String>) jListProgrammingLanguages.getModel();
        DefaultListModel<String> listModelFrameworks = (DefaultListModel<String>) jListFrameworks.getModel();
        DefaultListModel<String> listModelTools = (DefaultListModel<String>) jListTools.getModel();
        DefaultListModel<String> listModelCDays = (DefaultListModel<String>) jListProgrammingLanguages1.getModel();

        // Clear previous selections
        jListProgrammingLanguages.clearSelection();
        jListFrameworks.clearSelection();
        jListTools.clearSelection();
        jListProgrammingLanguages1.clearSelection();
        
        
        // Select the values in the lists
        for (String language : selectedDayStrings) {
            int index = listModelCDays.indexOf(language);
            if (index != -1) {
                jListProgrammingLanguages1.addSelectionInterval(index, index);
            }
        }
        
        // Select the values in the lists
        for (String language : programmingLanguages) {
            int index = listModelLanguages.indexOf(language);
            if (index != -1) {
                jListProgrammingLanguages.addSelectionInterval(index, index);
            }
        }

        for (String framework : frameworks) {
            int index = listModelFrameworks.indexOf(framework);
            if (index != -1) {
                jListFrameworks.addSelectionInterval(index, index);
            }
        }

        for (String tool : tools) {
            int index = listModelTools.indexOf(tool);
            if (index != -1) {
                jListTools.addSelectionInterval(index, index);
            }
        }

        btnUpdateCourse.setVisible(true);
                //System.out.println("Selected tools(edit): " + jListTools.getSelectedValuesList());

    }//GEN-LAST:event_jButtonEditActionPerformed

    private void jButtonDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDeleteActionPerformed
        // TODO add your handling code here:
        business.getCourseCatalog().deleteCourse(professor.findCourse((String) jComboBoxSelectCourse.getSelectedItem()));
        professor.removeCourseFromProfile(professor.findCourse((String) jComboBoxSelectCourse.getSelectedItem()));
        populateCourseComboBox();
    }//GEN-LAST:event_jButtonDeleteActionPerformed

    private void jButtonCopyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCopyActionPerformed
        // TODO add your handling code here:
        jButtonEdit.setVisible(false);
        jButtonCopy.setVisible(false);
        jButtonDelete.setVisible(false);

        setCourseFieldsEditable(true);
        populateTechStack();
        Course newCourse = professor.findCourse((String) jComboBoxSelectCourse.getSelectedItem());
        String coursename = txtFirstName.getText();
        int count = 1;
        if(coursename.contains("_copy")){
            count = Character.getNumericValue(coursename.charAt(-1))+1;
            txtFirstName.setText(coursename.split("_copy")[0]+ "_copy" + count);
        }
        else{
            txtFirstName.setText(coursename+ "_copy" + count);
        }
        List<String> programmingLanguages = newCourse.getTechStack().getProgrammingLanguages();
        List<String> frameworks = newCourse.getTechStack().getFrameworks();
        List<String> tools = newCourse.getTechStack().getTools();
        List<DayOfWeek> daysOfWeek = newCourse.getSchedule().getDaysOfWeek(); // Adjust this to your Schedule class
        List<String> selectedDayStrings = new ArrayList<>();

        for (DayOfWeek day : daysOfWeek) {
            switch (day) {
                case MONDAY -> selectedDayStrings.add("Monday");
                case TUESDAY -> selectedDayStrings.add("Tuesday");
                case WEDNESDAY -> selectedDayStrings.add("Wednesday");
                case THURSDAY -> selectedDayStrings.add("Thursday");
                case FRIDAY -> selectedDayStrings.add("Friday");
                case SATURDAY -> selectedDayStrings.add("Saturday");
                case SUNDAY -> selectedDayStrings.add("Sunday");
            }
        }
        

        // Get the existing list models
        DefaultListModel<String> listModelLanguages = (DefaultListModel<String>) jListProgrammingLanguages.getModel();
        DefaultListModel<String> listModelFrameworks = (DefaultListModel<String>) jListFrameworks.getModel();
        DefaultListModel<String> listModelTools = (DefaultListModel<String>) jListTools.getModel();
        DefaultListModel<String> listModelCDays = (DefaultListModel<String>) jListProgrammingLanguages1.getModel();

        // Clear previous selections
        jListProgrammingLanguages.clearSelection();
        jListFrameworks.clearSelection();
        jListTools.clearSelection();
        jListProgrammingLanguages1.clearSelection();
        
        
        // Select the values in the lists
        for (String language : selectedDayStrings) {
            int index = listModelCDays.indexOf(language);
            if (index != -1) {
                jListProgrammingLanguages1.addSelectionInterval(index, index);
            }
        }
        // Select the values in the lists
        for (String language : programmingLanguages) {
            int index = listModelLanguages.indexOf(language);
            if (index != -1) {
                jListProgrammingLanguages.addSelectionInterval(index, index);
            }
        }

        for (String framework : frameworks) {
            int index = listModelFrameworks.indexOf(framework);
            if (index != -1) {
                jListFrameworks.addSelectionInterval(index, index);
            }
        }

        for (String tool : tools) {
            int index = listModelTools.indexOf(tool);
            if (index != -1) {
                jListTools.addSelectionInterval(index, index);
            }
        }

        btnUpdateCourse.setText("Copy Course");
        btnUpdateCourse.setVisible(true);

    }//GEN-LAST:event_jButtonCopyActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnLogOut;
    private javax.swing.JButton btnUpdateCourse;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JButton jButtonCopy;
    private javax.swing.JButton jButtonDelete;
    private javax.swing.JButton jButtonEdit;
    private javax.swing.JComboBox<String> jComboBoxPreRequisites;
    private javax.swing.JComboBox<String> jComboBoxSelectCourse;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JList<String> jListFrameworks;
    private javax.swing.JList<String> jListProgrammingLanguages;
    private javax.swing.JList<String> jListProgrammingLanguages1;
    private javax.swing.JList<String> jListTools;
    private javax.swing.JRadioButton jRadioButtonProfessor;
    private javax.swing.JRadioButton jRadioButtonProfessor1;
    private javax.swing.JRadioButton jRadioButtonStudent;
    private javax.swing.JRadioButton jRadioButtonStudent1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JLabel lblEmail;
    private javax.swing.JLabel lblFirstName;
    private javax.swing.JLabel lblLastName;
    private javax.swing.JLabel lblLastName1;
    private javax.swing.JLabel lblRole;
    private javax.swing.JLabel lblRole1;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtFirstName;
    // End of variables declaration//GEN-END:variables

    private void modifyComponents() {
        jLabel3.setVisible(false);
        jLabel4.setVisible(false);
        jTextField1.setVisible(false);
        jTextField2.setVisible(false);
        populateCourseComboBox();
        populateTechStack();
        
    }
    public void populateCourseComboBox() {
    // Clear the existing items in the JComboBox
    jComboBoxSelectCourse.removeAllItems();  // Clear existing items
    jComboBoxSelectCourse.addItem("Select a Course");
    
    // Get the list of courses from the CourseCatalog
    ArrayList<Course> courses = professor.getCourseList();
    for (Course course : courses) {
            jComboBoxSelectCourse.addItem(course.getCourseName());
        }
    }
    
    public void populateTechStack() {
    // Create a list of programming languages
        List<String> cdays = Arrays.asList(
            "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"
        );

    // Create a DefaultListModel to store the programming languages
    DefaultListModel<String> listModelcdays = new DefaultListModel<>();

    // Add each programming language to the list model
    for (String language : cdays) {
        listModelcdays.addElement(language);
    }
    jListProgrammingLanguages1.setModel(listModelcdays);
    // Create a list of programming languages
        List<String> programmingLanguages = Arrays.asList(
        "Java", "Python", "C++", "JavaScript", "Ruby", "Swift",
        "C#", "PHP", "Go", "Rust", "TypeScript", "Kotlin",
        "Perl", "Scala", "Haskell", "Objective-C", "Lua", "Dart",
        "SQL", "HTML"
    );

    // Create a DefaultListModel to store the programming languages
    DefaultListModel<String> listModelLanguages = new DefaultListModel<>();

    // Add each programming language to the list model
    for (String language : programmingLanguages) {
        listModelLanguages.addElement(language);
    }

    // Set the list model to the JList for programming languages
    jListProgrammingLanguages.setModel(listModelLanguages);

    // Create a list of frameworks
    List<String> frameworks = Arrays.asList(
        "Spring", "Hibernate", "React", "Angular", "Node.js", "Django",
        "Ruby on Rails", "Vue.js", "Laravel", "Express.js", "Flask", "Struts",
        "Ember.js", "Play Framework", "Meteor", "Symfony", "ASP.NET Core", "CakePHP",
        "MySQL", "MongoDB"
    );

    // Create a DefaultListModel to store the frameworks
    DefaultListModel<String> listModelFrameworks = new DefaultListModel<>();

    // Add each framework to the list model
    for (String framework : frameworks) {
        listModelFrameworks.addElement(framework);
    }

    // Set the list model to the JList for frameworks
    jListFrameworks.setModel(listModelFrameworks);

    // Create a list of tools
    List<String> tools = Arrays.asList(
        "Eclipse", "IntelliJ IDEA", "Git", "Visual Studio Code", "PyCharm", "Sublime Text",
        "NetBeans", "Android Studio", "Xcode", "Atom", "Notepad++", "Vim",
        "Eclipse", "Visual Studio", "CLion", "WebStorm", "Rider", "Code::Blocks",
        "SQL Server Management Studio"
    );

    // Create a DefaultListModel to store the tools
    DefaultListModel<String> listModelTools = new DefaultListModel<>();

    // Add each tool to the list model
    for (String tool : tools) {
        listModelTools.addElement(tool);
    }

    // Set the list model to the JList for tools
    jListTools.setModel(listModelTools);
}


private void setCourseFieldsVisibility(boolean isVisible) {
    lblFirstName.setVisible(isVisible);
    txtFirstName.setVisible(isVisible);
    lblLastName.setVisible(isVisible);
    txtEmail.setVisible(isVisible);
    lblRole.setVisible(isVisible);
    jRadioButtonStudent.setVisible(isVisible);
    jRadioButtonProfessor.setVisible(isVisible);
    btnUpdateCourse.setVisible(isVisible);
    jLabel2.setVisible(isVisible);
    jComboBoxPreRequisites.setVisible(isVisible);
    jRadioButtonProfessor1.setVisible(isVisible);
    lblRole1.setVisible(isVisible);
    jRadioButtonStudent1.setVisible(isVisible);
    jLabel3.setVisible(isVisible);
    jLabel4.setVisible(isVisible);
    jTextField1.setVisible(isVisible);
    jTextField2.setVisible(isVisible);
    jLabel5.setVisible(isVisible);
    jScrollPane2.setVisible(isVisible);
    jLabel6.setVisible(isVisible);
    jScrollPane3.setVisible(isVisible);
    jLabel7.setVisible(isVisible);
    jScrollPane4.setVisible(isVisible);
    jLabel8.setVisible(isVisible);
    jScrollPane6.setVisible(isVisible);
    jLabel9.setVisible(isVisible);
    jScrollPane1.setVisible(isVisible);
    jTextField3.setVisible(isVisible);
    btnUpdateCourse.setVisible(isVisible);
    jTextArea1.setVisible(isVisible);
    lblLastName1.setVisible(isVisible);
}

private void setCourseFieldsEditable(boolean isEditable) {
    txtFirstName.setEditable(isEditable);
    txtEmail.setEditable(isEditable);
    jRadioButtonStudent.setEnabled(isEditable);
    jRadioButtonProfessor.setEnabled(isEditable);
    jRadioButtonStudent.setBackground(jRadioButtonStudent.getParent().getBackground());
    jRadioButtonProfessor.setBackground(jRadioButtonProfessor.getParent().getBackground());
    jComboBoxPreRequisites.setEnabled(isEditable);
    jRadioButtonProfessor1.setEnabled(isEditable);
    jRadioButtonStudent1.setBackground(jRadioButtonStudent.getParent().getBackground());
    jRadioButtonProfessor1.setBackground(jRadioButtonProfessor.getParent().getBackground());
    jRadioButtonStudent1.setEnabled(isEditable);
    jTextField1.setEditable(isEditable);
    jTextField2.setEditable(isEditable);
    jTextField3.setEditable(isEditable);
    jTextArea1.setEditable(isEditable);
    jListProgrammingLanguages1.setEnabled(isEditable);
    jListProgrammingLanguages.setEnabled(isEditable);
    jListFrameworks.setEnabled(isEditable);
    jListTools.setEnabled(isEditable);
}

private void setCoursePropertiesBasedOnSelection(Course selectedCourse) {
    // Get the selected course name from the jComboBoxSelectCourse
    // Find the selected course from your list of courses (assuming you have a list)

    if (selectedCourse != null) {
        // Set the properties of the selected course to the respective fields
        txtFirstName.setText(selectedCourse.getCourseName());
        jTextArea1.setText(selectedCourse.getDescription());
        txtEmail.setText(String.valueOf(selectedCourse.getCourseHours()));

        if (selectedCourse.isTermBased()) {
            jRadioButtonStudent1.setSelected(true);
            jLabel3.setText("Term:");
            jLabel4.setText("Year:");
            jTextField1.setVisible(true);
            jTextField2.setVisible(true);
            jTextField1.setText(selectedCourse.getTerm());
            jTextField2.setText(String.valueOf(selectedCourse.getTermYear()));
        } else {
            jRadioButtonProfessor1.setSelected(true);
            jLabel3.setText("Start Date:");
            jLabel4.setText("End Date:");
            jTextField1.setVisible(true);
            jTextField2.setVisible(true);
            jTextField1.setText(selectedCourse.getStartDate().toString());
            jTextField2.setText(selectedCourse.getEndDate().toString());
        }

        // Set the session type radio buttons
        if (selectedCourse.getSessionType().equals("Live")) {
            jRadioButtonStudent.setSelected(true);
        } else {
            jRadioButtonProfessor.setSelected(true);
        }

        // Set the selected programming languages, frameworks, and tools in the JLists
        List<String> programmingLanguages = selectedCourse.getTechStack().getProgrammingLanguages();
        List<String> frameworks = selectedCourse.getTechStack().getFrameworks();
        List<String> tools = selectedCourse.getTechStack().getTools();
        
//                // Set the selected class days
        List<DayOfWeek> daysOfWeek = selectedCourse.getSchedule().getDaysOfWeek(); // Adjust this to your Schedule class
        List<String> selectedDayStrings = new ArrayList<>();

        for (DayOfWeek day : daysOfWeek) {
            switch (day) {
                case MONDAY -> selectedDayStrings.add("Monday");
                case TUESDAY -> selectedDayStrings.add("Tuesday");
                case WEDNESDAY -> selectedDayStrings.add("Wednesday");
                case THURSDAY -> selectedDayStrings.add("Thursday");
                case FRIDAY -> selectedDayStrings.add("Friday");
                case SATURDAY -> selectedDayStrings.add("Saturday");
                case SUNDAY -> selectedDayStrings.add("Sunday");
            }
        }
        
        ListModel model = jListProgrammingLanguages1.getModel();
        String modelName = model.getClass().getName();
        ////System.out.println("Model type: " + modelName);
        // Get the existing list models        
        model = jListFrameworks.getModel();
        modelName = model.getClass().getName();
        ////System.out.println("Model type: " + modelName);
        // Get the existing list models
        DefaultListModel<String> listModelClassDays = (DefaultListModel<String>) jListProgrammingLanguages1.getModel();


        // Clear previous selections
        jListProgrammingLanguages1.clearSelection();

        // Select the values in the lists
        for (String language : selectedDayStrings) {
            int index = listModelClassDays.indexOf(language);
            if (index != -1) {
                jListProgrammingLanguages1.addSelectionInterval(index, index);
            }
        }



        setJListSelectedValues(jListProgrammingLanguages, programmingLanguages);
        ////System.out.println(programmingLanguages);

        setJListSelectedValues(jListFrameworks, frameworks);
        
        setJListSelectedValues(jListTools, tools);
        setJListSelectedValues(jListProgrammingLanguages1, selectedDayStrings); // Assuming you have a JList for class days

        // Set prerequisites in jComboBoxPreRequisites
        List<Course> prerequisites = selectedCourse.getPrerequisites();
        jComboBoxPreRequisites.removeAllItems();
        for (Course prerequisite : prerequisites) {
            if (prerequisite != null) {
                jComboBoxPreRequisites.addItem(prerequisite.getCourseName());
            }
        }
        //System.out.println("Selected tools(set): " + jListTools.getSelectedValuesList());

    }
}

    private void setJListSelectedValues(JList<String> jList, List<String> selectedValues) {
        DefaultListModel<String> listModel = (DefaultListModel<String>) jList.getModel();
        listModel.clear();

        for (String value : selectedValues) {
            listModel.addElement(value);
        }
    }

}
