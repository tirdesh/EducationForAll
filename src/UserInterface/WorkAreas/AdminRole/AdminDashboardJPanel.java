/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UserInterface.WorkAreas.AdminRole;

import Business.Business;
import Business.CourseWork.Course;
import Business.Profiles.EmployerProfile;
import Business.Profiles.ProfessorProfile;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.Comparator;
import java.util.List;
import java.util.stream.Collectors;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author tirdesh
 */
public class AdminDashboardJPanel extends javax.swing.JPanel {
    javax.swing.JPanel CardSequencePanel;
    Business business;
    /**
     * Creates new form ProfessorStatAreaJPanel
     */
    public AdminDashboardJPanel(Business b, JPanel clp) {

        business = b;
        this.CardSequencePanel = clp;
        initComponents();
        List<String> termYears = getAllCourseTermYears();
        termYears.add(0, "All");
        DefaultComboBoxModel<String> model = new DefaultComboBoxModel<>(termYears.toArray(new String[0]));
        jComboBoxTermSelector.setModel(model);
        updateDashboard(business.getCourseCatalog().getCourseList());
}

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabelWelcome = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabelEducators = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jPanel11 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jLabelStudentsEnrolled = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jPanel10 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableProfessor = new javax.swing.JTable();
        jComboBoxTermSelector = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        jPanel8 = new javax.swing.JPanel();
        jLabelTotalJobs = new javax.swing.JLabel();
        jPanel13 = new javax.swing.JPanel();
        jLabel21 = new javax.swing.JLabel();
        jPanel14 = new javax.swing.JPanel();
        jLabelTotalCourses = new javax.swing.JLabel();
        jPanel15 = new javax.swing.JPanel();
        jLabel22 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jPanel16 = new javax.swing.JPanel();
        jLabelEmployerIncorporations = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jPanel17 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableCourses = new javax.swing.JTable();
        jLabel9 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTableEmployers = new javax.swing.JTable();

        jLabelWelcome.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabelWelcome.setForeground(new java.awt.Color(96, 83, 150));
        jLabelWelcome.setText("Welcome back KeepToo");

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));

        jLabelEducators.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabelEducators.setForeground(new java.awt.Color(96, 83, 150));
        jLabelEducators.setText("500");

        jLabel6.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(96, 83, 150));
        jLabel6.setText("Total");

        jPanel11.setBackground(new java.awt.Color(232, 201, 232));

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 10, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelEducators, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(46, Short.MAX_VALUE))
            .addComponent(jPanel11, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(11, 11, 11)
                .addComponent(jLabelEducators, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(96, 83, 150));
        jLabel7.setText("Educators");

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));

        jLabelStudentsEnrolled.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabelStudentsEnrolled.setForeground(new java.awt.Color(96, 83, 150));
        jLabelStudentsEnrolled.setText("50");

        jLabel19.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(96, 83, 150));
        jLabel19.setText("Total");

        jPanel10.setBackground(new java.awt.Color(232, 201, 232));

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 130, Short.MAX_VALUE)
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 10, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jLabelStudentsEnrolled))
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addComponent(jLabelStudentsEnrolled)
                .addGap(8, 8, 8)
                .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jLabel10.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(96, 83, 150));
        jLabel10.setText("Students Enrolled");

        jScrollPane1.setBackground(new java.awt.Color(247, 247, 247));
        jScrollPane1.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));

        jTableProfessor.setBackground(new java.awt.Color(247, 247, 247));
        jTableProfessor.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        jTableProfessor.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"Allan", "XLS", "2hrs"},
                {"Brian", "React", "1hr"},
                {"Romeo", "C#", "3 Days"},
                {"Alex", "C++ ", "10 hrs"},
                {null, null, null}
            },
            new String [] {
                "Professor", "Courses Offered", "Rating"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jTableProfessor.setGridColor(new java.awt.Color(247, 247, 247));
        jTableProfessor.setSelectionBackground(new java.awt.Color(96, 83, 150));
        jScrollPane1.setViewportView(jTableProfessor);
        if (jTableProfessor.getColumnModel().getColumnCount() > 0) {
            jTableProfessor.getColumnModel().getColumn(2).setHeaderValue("No.of Students");
        }

        jComboBoxTermSelector.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBoxTermSelector.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxTermSelectorActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(96, 83, 150));
        jLabel8.setText("Highly Rated Professors");

        jPanel8.setBackground(new java.awt.Color(255, 255, 255));

        jLabelTotalJobs.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabelTotalJobs.setForeground(new java.awt.Color(96, 83, 150));
        jLabelTotalJobs.setText("$2000");

        jPanel13.setBackground(new java.awt.Color(232, 201, 232));

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 10, Short.MAX_VALUE)
        );

        jLabel21.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        jLabel21.setForeground(new java.awt.Color(96, 83, 150));
        jLabel21.setText("Job Postings");

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel21)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabelTotalJobs, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30))
            .addComponent(jPanel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addComponent(jPanel13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelTotalJobs))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel14.setBackground(new java.awt.Color(255, 255, 255));

        jLabelTotalCourses.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabelTotalCourses.setForeground(new java.awt.Color(96, 83, 150));
        jLabelTotalCourses.setText("$2000");

        jPanel15.setBackground(new java.awt.Color(232, 201, 232));

        javax.swing.GroupLayout jPanel15Layout = new javax.swing.GroupLayout(jPanel15);
        jPanel15.setLayout(jPanel15Layout);
        jPanel15Layout.setHorizontalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel15Layout.setVerticalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 10, Short.MAX_VALUE)
        );

        jLabel22.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        jLabel22.setForeground(new java.awt.Color(96, 83, 150));
        jLabel22.setText("Courses");

        javax.swing.GroupLayout jPanel14Layout = new javax.swing.GroupLayout(jPanel14);
        jPanel14.setLayout(jPanel14Layout);
        jPanel14Layout.setHorizontalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel22)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 53, Short.MAX_VALUE)
                .addComponent(jLabelTotalCourses, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27))
            .addComponent(jPanel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel14Layout.setVerticalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addComponent(jPanel15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelTotalCourses))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel11.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(96, 83, 150));
        jLabel11.setText("Employer Incorporations");

        jPanel16.setBackground(new java.awt.Color(255, 255, 255));

        jLabelEmployerIncorporations.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabelEmployerIncorporations.setForeground(new java.awt.Color(96, 83, 150));
        jLabelEmployerIncorporations.setText("50");

        jLabel23.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        jLabel23.setForeground(new java.awt.Color(96, 83, 150));
        jLabel23.setText("Total");

        jPanel17.setBackground(new java.awt.Color(232, 201, 232));

        javax.swing.GroupLayout jPanel17Layout = new javax.swing.GroupLayout(jPanel17);
        jPanel17.setLayout(jPanel17Layout);
        jPanel17Layout.setHorizontalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 130, Short.MAX_VALUE)
        );
        jPanel17Layout.setVerticalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 10, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel16Layout = new javax.swing.GroupLayout(jPanel16);
        jPanel16.setLayout(jPanel16Layout);
        jPanel16Layout.setHorizontalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel17, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jLabelEmployerIncorporations))
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel23, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel16Layout.setVerticalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addComponent(jPanel17, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addComponent(jLabelEmployerIncorporations)
                .addGap(8, 8, 8)
                .addComponent(jLabel23, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jScrollPane2.setBackground(new java.awt.Color(247, 247, 247));
        jScrollPane2.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));

        jTableCourses.setBackground(new java.awt.Color(247, 247, 247));
        jTableCourses.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        jTableCourses.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"Allan", "XLS", "2hrs"},
                {"Brian", "React", "1hr"},
                {"Romeo", "C#", "3 Days"},
                {"Alex", "C++ ", "10 hrs"},
                {null, null, null}
            },
            new String [] {
                "Course", "Professor", "No.of Students"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jTableCourses.setGridColor(new java.awt.Color(247, 247, 247));
        jTableCourses.setSelectionBackground(new java.awt.Color(96, 83, 150));
        jScrollPane2.setViewportView(jTableCourses);
        if (jTableCourses.getColumnModel().getColumnCount() > 0) {
            jTableCourses.getColumnModel().getColumn(2).setHeaderValue("No.of Students");
        }

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(96, 83, 150));
        jLabel9.setText("Student Favorites");

        jLabel14.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(96, 83, 150));
        jLabel14.setText("Top Employment Oppurtinities");

        jScrollPane3.setBackground(new java.awt.Color(247, 247, 247));
        jScrollPane3.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));

        jTableEmployers.setBackground(new java.awt.Color(247, 247, 247));
        jTableEmployers.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        jTableEmployers.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"Allan", "XLS"},
                {"Brian", "React"},
                {"Romeo", "C#"},
                {"Alex", "C++ "},
                {null, null}
            },
            new String [] {
                "Employer", "Job Postings"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jTableEmployers.setGridColor(new java.awt.Color(247, 247, 247));
        jTableEmployers.setSelectionBackground(new java.awt.Color(96, 83, 150));
        jScrollPane3.setViewportView(jTableEmployers);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jPanel14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabelWelcome, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(77, 77, 77)
                            .addComponent(jComboBoxTermSelector, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(30, 30, 30)
                            .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(30, 30, 30)
                            .addComponent(jPanel16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(42, 42, 42)
                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(42, 42, 42)
                            .addComponent(jLabel11)))
                    .addComponent(jLabel14)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 460, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 460, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 460, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelWelcome, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxTermSelector, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(42, 42, 42)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(42, 42, 42)
                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(7, 7, 7)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(415, 415, 415))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jComboBoxTermSelectorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxTermSelectorActionPerformed
    // TODO add your handling code here:
    // Get the selected term and year from the combo box
    String selectedTerm = (String) jComboBoxTermSelector.getSelectedItem();

    // Create a list of courses to display
    ArrayList<Course> coursesToDisplay;

    if (selectedTerm != null && "All".equals(selectedTerm)) {
        // Display all courses if "All" is selected
        coursesToDisplay = business.getCourseCatalog().getCourseList();
    } else {
        // Filter courses based on the selected term and year
        coursesToDisplay = getCoursesByTermAndYear(business.getCourseCatalog().getCourseList(), selectedTerm);
    }
    updateDashboard(coursesToDisplay);
    }//GEN-LAST:event_jComboBoxTermSelectorActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> jComboBoxTermSelector;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabelEducators;
    private javax.swing.JLabel jLabelEmployerIncorporations;
    private javax.swing.JLabel jLabelStudentsEnrolled;
    private javax.swing.JLabel jLabelTotalCourses;
    private javax.swing.JLabel jLabelTotalJobs;
    private javax.swing.JLabel jLabelWelcome;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel17;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTableCourses;
    private javax.swing.JTable jTableEmployers;
    private javax.swing.JTable jTableProfessor;
    // End of variables declaration//GEN-END:variables

    
public List<String> getAllCourseTermYears() {
    List<String> termYearList = new ArrayList<>();
    
    // Create a custom comparator to sort by year and season
    Comparator<String> termYearComparator = (termYear1, termYear2) -> {
        // Split the termYear into term and year
        String[] parts1 = termYear1.split(" ");
        String[] parts2 = termYear2.split(" ");
        
        // Compare the year (ascending order)
        int yearComparison = Integer.compare(Integer.parseInt(parts1[1]), Integer.parseInt(parts2[1]));
        
        if (yearComparison != 0) {
            return yearComparison;
        } else {
            // Define the order of seasons
            String[] seasonOrder = {"Spring", "Summer", "Fall", "Winter"};
            
            // Compare the seasons based on their order
            int seasonComparison = Integer.compare(
                Arrays.asList(seasonOrder).indexOf(parts1[0]),
                Arrays.asList(seasonOrder).indexOf(parts2[0])
            );
            
            return seasonComparison;
        }
    };
    
    for (Course course : business.getCourseCatalog().getCourseList()) {
        if (course.isTermBased()) {
            String termYear = course.getTerm() + " " + course.getTermYear();
            if(!termYearList.contains(termYear)){
                termYearList.add(termYear);
            }
        }
    }
    
    // Sort the list using the custom comparator
    Collections.sort(termYearList, termYearComparator);
    
    return termYearList;
}

    public ArrayList<Course> getCoursesByTermAndYear(ArrayList<Course> courseList, String termAndYear) {
    ArrayList<Course> coursesByTermAndYear = new ArrayList<>();

    for (Course course : courseList) {
        if (course.isTermBased()) {
            String courseTermAndYear = course.getTerm() + " " + course.getTermYear();
            if (courseTermAndYear.equals(termAndYear)) {
                coursesByTermAndYear.add(course);
            }
        }
    }
    
    return coursesByTermAndYear;
    }
    
    public void populateTopRatedProfessors() {
        DefaultTableModel tableModel = new DefaultTableModel();
        tableModel.addColumn("Professor");
        tableModel.addColumn("Courses Offered");
        tableModel.addColumn("Rating");

        ArrayList<ProfessorProfile> topRatedProfessors = getTopRatedProfessors();
        for (ProfessorProfile professor : topRatedProfessors) {
            String name = professor.getPerson().getFirst_name()+ " " + professor.getPerson().getLast_name();
            String courseCount = String.valueOf(professor.getCourseList().size());
            String rating = String.valueOf(professor.getRatingSystem().getOverallAverageRating());
            tableModel.addRow(new Object[]{name, courseCount, rating});
        }

        jTableProfessor.setModel(tableModel);
    }

    private void populateTopEmployers() {
    // Create a custom table model for jTableEmployers if you haven't done this already
    DefaultTableModel tableModel = new DefaultTableModel();
    tableModel.addColumn("Employer");
    tableModel.addColumn("Job Postings");

    // Retrieve the list of employers
    ArrayList<EmployerProfile> employers = business.getEmployerDirectory().getEmployerlist();

    // Sort the employers based on your criteria (e.g., job postings, ratings, etc.)
    employers.sort(Comparator.comparingInt(employer -> employer.getJobOpenings().size()));

    // Reverse the list to get the top employers first (if you want the highest values at the top)
    Collections.reverse(employers);

    // Clear the existing data from the table model
    tableModel.setRowCount(0);

    // Populate the table model with the top employers (you can adjust the number)
    for (int i = 0; i < Math.min(5, employers.size()); i++) {
        EmployerProfile employer = employers.get(i);
        String employerName = employer.getCompanyName();
        int jobPostings = employer.getJobOpenings().size();
        
        tableModel.addRow(new Object[]{employerName, jobPostings});
    }

    // Set the table model for jTableEmployers
    jTableEmployers.setModel(tableModel);
}

    
    private void populateTopCourses(ArrayList<Course> courseList) {
        // Create a custom table model for jTableTopFiveCourses if you haven't done this already
        DefaultTableModel tableModel = new DefaultTableModel();
        tableModel.addColumn("Course");
        tableModel.addColumn("Professor");
        tableModel.addColumn("No. of Students");

        // Retrieve the list of courses
        ArrayList<Course> courses = courseList;

        // Sort the courses based on the number of students
        courses.sort(Comparator.comparingInt(course -> course.getRegisteredStudents().size()));

        // Clear the existing data from the table model
        tableModel.setRowCount(0);

        // Populate the table model with the top five courses by student count (or fewer if there are fewer than five courses)
        for (int i = 0; i < Math.min(5, courses.size()); i++) {
            Course course = courses.get(i);
            String courseName = course.getCourseName();
            ProfessorProfile professor = course.getProfessorProfile();
            String professorName;
            if (professor!= null){
                professorName = professor.getPerson().getFirst_name()+ " " + professor.getPerson().getLast_name();
            }
            else{
                professorName = "professor X";
            }
            int numberOfStudents = course.getRegisteredStudents().size();
            tableModel.addRow(new Object[]{courseName, professorName, numberOfStudents});
        }

        // Set the table model for jTableTopFiveCourses
        jTableCourses.setModel(tableModel);
    }

    private void updateDashboard(ArrayList<Course> coursesToDisplay) {
    jLabelWelcome.setText("Welcome Admin");
    // Update the course count label
    jLabelEducators.setText(String.valueOf(business.getProfessorDirectory().getProfessorlist().size()));
    jLabelStudentsEnrolled.setText(String.valueOf(business.getStudentDirectory().getStudentlist().size()));
    jLabelEmployerIncorporations.setText(String.valueOf(business.getEmployerDirectory().getEmployerlist().size()));
    jLabelTotalCourses.setText(String.valueOf(coursesToDisplay.size()));
    jLabelTotalJobs.setText(String.valueOf(getTotalJobs()));
    populateTopCourses(coursesToDisplay);
    populateTopEmployers();
    populateTopRatedProfessors();
    
    }

    private ArrayList<ProfessorProfile> getTopRatedProfessors() {
        List<ProfessorProfile> sortedProfessors = business.getProfessorDirectory().getProfessorlist().stream()
                .sorted((professor1, professor2) -> {
                    double rating1 = professor1.getRatingSystem().getOverallAverageRating();
                    double rating2 = professor2.getRatingSystem().getOverallAverageRating();
                    // Sort in descending order
                    return Double.compare(rating2, rating1);
                })
                .collect(Collectors.toList());

        // Get the top 5 professors
        int count = Math.min(5, sortedProfessors.size());
        ArrayList<ProfessorProfile> topProfessors = new ArrayList<>(sortedProfessors.subList(0, count));

        return topProfessors;
    }    

    private int getTotalJobs() {
        int totalJobs = 0;

        // Iterate through your employer directory
        for (EmployerProfile employer : business.getEmployerDirectory().getEmployerlist()) {
            // Get the job openings for each employer and add them to the total
            totalJobs += employer.getJobOpenings().size();
        }

        return totalJobs;
    }

}
