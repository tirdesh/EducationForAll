/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UserInterface.WorkAreas.StudentRole.CourseRegistration;

import Business.Business;
import Business.CourseWork.Course;
import Business.CourseWork.CourseCatalog;
import Business.Profiles.StudentProfile;
import UserInterface.WorkAreas.StudentRole.StudentWorkAreaJPanel;
import java.awt.Component;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import javax.swing.JButton;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTable;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;
import ui.LoginJPanel;

/**
 *
 * @author abhisheksagar
 */
public class RegistrationJPanel extends javax.swing.JPanel {
    Business business;
//    UserAccount actualuser;
    JPanel CardSequencePanel;
    StudentProfile spp;
    CourseCatalog cc;
    /**
     * Creates new form RegistrationJPanel
     */
    public RegistrationJPanel(Business business, JPanel CardSequencePanel, StudentProfile spp) {
        initComponents();
        this.business=business;
        this.CardSequencePanel=CardSequencePanel;
        this.spp=spp;
        this.cc=business.getCourseCatalog();
        populatetable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblregister = new javax.swing.JTable();
        btnLogOut = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();
        txtsearch = new javax.swing.JTextField();
        btnsearch = new javax.swing.JButton();

        tblregister.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Course Name", "Course Discription", "Term Based", "Duration", "Session Type", "Professor Rating", ""
            }
        ));
        tblregister.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblregisterMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblregister);

        btnLogOut.setText("Log Out");
        btnLogOut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLogOutActionPerformed(evt);
            }
        });

        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        txtsearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtsearchActionPerformed(evt);
            }
        });

        btnsearch.setText("Search");
        btnsearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnsearchActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1000, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnLogOut, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(382, 382, 382)
                    .addComponent(txtsearch, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                    .addComponent(btnsearch)
                    .addGap(382, 382, 382)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(57, 57, 57)
                .addComponent(btnBack)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnLogOut)
                .addGap(489, 489, 489)
                .addComponent(jScrollPane1)
                .addGap(38, 38, 38))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(488, 488, 488)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtsearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnsearch))
                    .addContainerGap(607, Short.MAX_VALUE)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnLogOutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLogOutActionPerformed
        // TODO add your handling code here:
        LoginJPanel panel = new LoginJPanel(business, CardSequencePanel);
        CardSequencePanel.removeAll();
        CardSequencePanel.add("LoginJPanel", panel);
        ((java.awt.CardLayout) CardSequencePanel.getLayout()).next(CardSequencePanel);
    }//GEN-LAST:event_btnLogOutActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        //        if(actualuser.getRole().equals("Student")){
            StudentWorkAreaJPanel studentWorkAreaJPanel = new StudentWorkAreaJPanel(business, spp, CardSequencePanel);
            CardSequencePanel.removeAll();
            CardSequencePanel.add("spp", studentWorkAreaJPanel);
            ((java.awt.CardLayout) CardSequencePanel.getLayout()).next(CardSequencePanel);
            //    }
        //        else{
            //            ProfessorWorkAreaJPanel professorWorkAreaJPanel = new ProfessorWorkAreaJPanel(business, pp, CardSequencePanel);
            //            CardSequencePanel.removeAll();
            //            CardSequencePanel.add("pp", professorWorkAreaJPanel);
            //            ((java.awt.CardLayout) CardSequencePanel.getLayout()).next(CardSequencePanel);
            //        }
    }//GEN-LAST:event_btnBackActionPerformed

//    private void exefunction(int column) {
//        
//    }
//    private void viewfunction(int column) {
//        
//    }
    
    private void tblregisterMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblregisterMouseClicked
        // TODO add your handling code here:
        if(evt.getClickCount()==1){
            int row=tblregister.getSelectedRow();
            int col=tblregister.getSelectedColumn();
            System.out.println("function");
            if(col==6){
                System.out.println("7 func");
                DefaultTableModel model = (DefaultTableModel) tblregister.getModel();
                System.out.println(model.getValueAt(row, 1).toString());
                Course c= cc.findCourse(model.getValueAt(row, 0).toString());
                
                spp.getCourseList().add(c);
                JOptionPane.showMessageDialog(this, "Course Added.");
                populatetable();
            
            }
//            if(col==7){
//                viewfunction(row);
//            }
        }
    }//GEN-LAST:event_tblregisterMouseClicked

    private void txtsearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtsearchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtsearchActionPerformed

    private void btnsearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnsearchActionPerformed
        // TODO add your handling code here:
        TableRowSorter<TableModel> rowSorter= new TableRowSorter<>(tblregister.getModel());
        tblregister.setRowSorter(rowSorter);
        String text = txtsearch.getText();
        if (text.length() == 0) {
            rowSorter.setRowFilter(null);
        } else {
            rowSorter.setRowFilter(RowFilter.regexFilter(text));
        }

    }//GEN-LAST:event_btnsearchActionPerformed
     

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnLogOut;
    private javax.swing.JButton btnsearch;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblregister;
    private javax.swing.JTextField txtsearch;
    // End of variables declaration//GEN-END:variables

    private void populatetable() {
        DefaultTableModel model = (DefaultTableModel) tblregister.getModel();
        
         model.setRowCount(0);
         ArrayList<Course> s= new ArrayList<Course>();
         for(Course u:cc.getCourseList()){
             if(spp.getCourseList().contains(u)){
                 
             }
             else{
                 s.add(u);
             }
         }
         for(Course u : s){
             
             Object[] row =new Object[7];
             row[0]=u.getCourseName();
             row[1]=u.getDescription();
//             row[2]=u.getPrerequisites();
//             row[3]=u.getCourseHours();
             row[2]=u.isTermBased()?u.getTerm()+ " "+u.getTermYear():"On Demand";
             row[3]="Start Date:"+u.getStartDate()+" End Date:"+u.getEndDate();
             row[4]=u.getSessionType();
//             JButton addButton = new JButton("Add Course");
//        addButton.addActionListener(new ActionListener() {
//            public void actionPerformed(ActionEvent e) {
//                // Handle the Add Course button click here
//            }
//        });
//        JButton viewButton = new JButton("View Course");
//        viewButton.addActionListener(new ActionListener() {
//            public void actionPerformed(ActionEvent e) {
//                // Handle the View Course button click here
//            }
//        });
        
             row[5]= u.getRatingSystem().getOverallAverageRating();
             row[6]= "Add";
//             row[7]=u.
             model.addRow(row);
//             TableColumn buttonColumn = tblregister.getColumnModel().getColumn(5); // Column index for the "Add Course" column
//row[5].setCellRenderer(new ButtonRenderer());
         }
         
    }
    
//class ButtonRenderer extends DefaultTableCellRenderer {
//    JButton button = new JButton();
//
//    public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
//        if (value != null) {
//            button.setText(value.toString());
//        } else {
//            button.setText("");
//        }
//        return button;
//    }
//}
}
